buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure.gradle.allure:allure-plugin:2.11.2"
    }
}

apply plugin: "io.qameta.allure"
apply plugin: 'java'


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.testng:testng:7.0.0'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    implementation 'com.beust:jcommander:1.48'
    implementation 'com.thoughtworks.xstream:xstream:1.4.18'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'org.hibernate:hibernate-core:5.6.14.Final'
    implementation 'ch.qos.logback:logback-classic:1.4.4'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.4'
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.19'
    implementation group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.20.1'
    implementation 'org.robotframework:robotframework:4.1'
    implementation 'io.cucumber:cucumber-java:7.11.0'
    implementation 'info.cukes:cucumber-testng:1.2.6'


}

task testGroups(type: Test) {
    useTestNG{
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task testContacts(type: Test) {
    useTestNG{
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}
task rf(type:JavaExec) {
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/rf-report'
    args 'src/test/resources/rf'
}
